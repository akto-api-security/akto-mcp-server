/*
 * Akto_nayan
 * Akto generated openAPI file
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akto.mcp.model;

import java.util.List;

import org.springframework.ai.tool.annotation.ToolParam;

import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
public class FetchAllIssuesRequest {

    @ToolParam(required=false)
    private String activeCollections;

    @ToolParam(required=false)
    private String sortKey;

    @ToolParam(required=false, description = "If sortKey is present then sortOrder must be passed. Determines the direction in which results are sorted. Use -1 for descending order (e.g., newest or highest values first) and 1 for ascending order (e.g., oldest or lowest values first).")
    private Integer sortOrder;

    @ToolParam(description = "Number of issues to fetch per page. Must be a positive integer (greater than 0). Used for pagination to control the number of results returned in a single request. Example: limit=10 will return 10 issues per page.")
    private Integer limit;

    @ToolParam(description = "End timestamp in seconds for filtering issues. Must not be a future value; typically use the current timestamp. Value is in seconds.")
    private Integer endTimeStamp;

    @ToolParam(required=false, description = "List of statuses to filter issues by. Allowed values: OPEN, FIXED, IGNORED. Optional. Example: filterStatus=[\"OPEN\"]")
    private List<String> filterStatus;

    @ToolParam(description = "Specifies how many records to skip. This is compulsory for pagination. Default is 0. Example: skip=0")
    private Integer skip;

    @ToolParam(required=false)
    private Integer startEpoch;
}
